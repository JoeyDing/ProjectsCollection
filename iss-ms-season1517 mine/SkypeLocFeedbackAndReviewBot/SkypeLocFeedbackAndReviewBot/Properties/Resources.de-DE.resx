<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AnswerNo" xml:space="preserve">
    <value>Nein</value>
  </data>
  <data name="AnswerYes" xml:space="preserve">
    <value>Ja</value>
  </data>
  <data name="Capabilities" xml:space="preserve">
    <value>Ich kann Ihnen mit Strings in Ihrer Muttersprache zu überprüfen und Ihnen die Änderung, um bessere Übersetzungen vorzuschlagen!</value>
  </data>
  <data name="ContactAdded" xml:space="preserve">
    <value>Hey, mein neuer Freund! Können permanent Lokalisierung Qualität von Skype!</value>
  </data>
  <data name="DiscoverUser" xml:space="preserve">
    <value>Ich würde gerne mehr über dich erfahren!</value>
  </data>
  <data name="DiscoverUserGoodReponse" xml:space="preserve">
    <value>So sind Sie Meister der Sprache {1}</value>
  </data>
  <data name="DiscoverUserLanguageGood" xml:space="preserve">
    <value>Was sind die Sprachen, wenn Sie der Meister auf sehr gutem Niveau?</value>
  </data>
  <data name="DiscoverUserLanguageNative" xml:space="preserve">
    <value>Was ist Ihre Muttersprache?</value>
  </data>
  <data name="DiscoverUserNativeResponce" xml:space="preserve">
    <value>Von was ich verstanden habe ist deine Muttersprache {0}</value>
  </data>
  <data name="DiscoverUserQualityJudge" xml:space="preserve">
    <value>Möchten Sie aktuelle Übersetzungsqualität zwischen {0} und {1} Sprachen zu beurteilen?</value>
    <comment>Placeholders replaced with language names. For example: {0} - english, {1}  -latvian</comment>
  </data>
  <data name="Hack42" xml:space="preserve">
    <value>Die Bedeutung des Lebens, das Universum und alles</value>
  </data>
  <data name="QualityCompareStrings" xml:space="preserve">
    <value>Bitte legen Sie Mark auf die Qualität der Übersetzung (1-10, wobei 10 - die beste und 1 - das Schlimmste) {0} Sprache phrase "{1}" (Id {2}) wird als "{3}" {4} Sprache übersetzt!</value>
  </data>
  <data name="QualityExcelent" xml:space="preserve">
    <value>Wow! Das klingt großartig! Wir geben einen Cookie an Übersetzern. Danke!</value>
  </data>
  <data name="QualityMedicore" xml:space="preserve">
    <value>Es ist begehbar. Möchten Sie etwas besseres empfehlen?</value>
  </data>
  <data name="QualityYouCanBetter" xml:space="preserve">
    <value>Autsch, das ist schade. Kannst du eine bessere Übersetzung vorschlagen</value>
  </data>
  <data name="RemovedContact" xml:space="preserve">
    <value>Danke für den Fisch!</value>
  </data>
  <data name="StatusReport" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="StatusReportAnswer" xml:space="preserve">
    <value>Sie übersetzt {0} und {1} Lanugage Paare überprüft</value>
  </data>
  <data name="StatusReportExtendedAnswer" xml:space="preserve">
    <value>Sie übersetzt {0} und {1} Lanugage Paare überprüft. {2} Ihrer Übersetzungen werden verwendet in der Produktion! Gut Gemacht!</value>
  </data>
  <data name="ThankYou" xml:space="preserve">
    <value>Danke, wird Ihr Beitrag für Sie und andere Benutzer eine bessere Benutzer Expirence machen!</value>
  </data>
  <data name="ContinueWithEvaluations" xml:space="preserve">
    <value>Möchten Sie weiterhin mit der Evaluation von Übersetzungen?</value>
  </data>
  <data name="EvaluateString_Bad_Action" xml:space="preserve">
    <value>Schrecklich. Ich kann besser übersetzen!</value>
  </data>
  <data name="EvaluateString_Best_Action" xml:space="preserve">
    <value>Ausgezeichnete Übersetzung</value>
  </data>
  <data name="EvaluateString_Medium_Action" xml:space="preserve">
    <value>Es ist fein Übersetzung</value>
  </data>
  <data name="EvaluateString_Source" xml:space="preserve">
    <value>Bewerten Sie eine Übersetzung aus Quelle "{0}" {1}</value>
  </data>
  <data name="Evaluate_EnterSuggestion" xml:space="preserve">
    <value>Bitte Typ-in Ihren Vorschlag! Und dann die Eingabetaste (Nachricht senden)</value>
  </data>
  <data name="Evaluate_Init" xml:space="preserve">
    <value>Möchten Sie einige Übersetzungsqualität zu bewerten?</value>
  </data>
  <data name="WelcomeMessage" xml:space="preserve">
    <value>Hey, neuer Freund! Ich bin LocaLiz. Sie helfen Sie mir mit Feedback über die Qualität der Übersetzung. </value>
  </data>
  <data name="Command_DoNotUnderstandLangauge" xml:space="preserve">
    <value>Sprechen Sie leider nicht die Sprache :(</value>
  </data>
  <data name="Command_In_What_Language" xml:space="preserve">
    <value>In welcher Sprache möchten Sie mit mir sprechen?</value>
  </data>
  <data name="Command_Select_One" xml:space="preserve">
    <value>Wählen Sie eine Sprache</value>
  </data>
  <data name="Command_SwtichToLanguage" xml:space="preserve">
    <value>Oki-Doki-jetzt Umstellung auf {0}</value>
  </data>
  <data name="Discover_Female" xml:space="preserve">
    <value>Weiblich</value>
  </data>
  <data name="Discover_Male" xml:space="preserve">
    <value>Männlich</value>
  </data>
  <data name="Discover_Other" xml:space="preserve">
    <value>Andere</value>
  </data>
  <data name="Discover_Unspecified" xml:space="preserve">
    <value>Keine Angabe</value>
  </data>
  <data name="Discover_What_Gender" xml:space="preserve">
    <value>Was ist dein Geschlecht?</value>
  </data>
  <data name="String1" xml:space="preserve">
    <value>123131</value>
  </data>
</root>