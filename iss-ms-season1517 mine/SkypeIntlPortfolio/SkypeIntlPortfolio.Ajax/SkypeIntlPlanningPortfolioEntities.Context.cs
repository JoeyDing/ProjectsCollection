//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SkypeIntlPortfolio.Ajax
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SkypeIntlPlanningPortfolioEntities : DbContext
    {
        public SkypeIntlPlanningPortfolioEntities()
            : base("name=SkypeIntlPlanningPortfolioEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BasicLanguageList> BasicLanguageLists { get; set; }
        public virtual DbSet<EOL> EOLs { get; set; }
        public virtual DbSet<FabricOnboarding> FabricOnboardings { get; set; }
        public virtual DbSet<FabricTenant> FabricTenants { get; set; }
        public virtual DbSet<LanguageSetting> LanguageSettings { get; set; }
        public virtual DbSet<MilestoneCategory> MilestoneCategories { get; set; }
        public virtual DbSet<Milestone> Milestones { get; set; }
        public virtual DbSet<Platform> Platforms { get; set; }
        public virtual DbSet<ProductContent> ProductContents { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<ProductVoice> ProductVoices { get; set; }
        public virtual DbSet<ReleaseCadence> ReleaseCadences { get; set; }
        public virtual DbSet<ReleaseChannel> ReleaseChannels { get; set; }
        public virtual DbSet<Source_Control_Interface> Source_Control_Interfaces { get; set; }
        public virtual DbSet<SourceStorage> SourceStorages { get; set; }
        public virtual DbSet<Status> Status { get; set; }
        public virtual DbSet<suppData_ExtendedEOL> suppData_ExtendedEOL { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Test_Pass> Test_Passes { get; set; }
        public virtual DbSet<TestSchedule> TestSchedules { get; set; }
        public virtual DbSet<suppData_EngineeringInfo> suppData_EngineeringInfo { get; set; }
        public virtual DbSet<vm_vsoTaskInfo> vm_vsoTaskInfo { get; set; }
        public virtual DbSet<vw_MilestoneInfo> vw_MilestoneInfo { get; set; }
        public virtual DbSet<SpokenInputOutput> SpokenInputOutputs { get; set; }
        public virtual DbSet<Feature> Features { get; set; }
        public virtual DbSet<TextInputOutput> TextInputOutputs { get; set; }
        public virtual DbSet<vw_MilestoneTestScheduleInfo> vw_MilestoneTestScheduleInfo { get; set; }
        public virtual DbSet<ResourceFiles_Target> ResourceFiles_Target { get; set; }
        public virtual DbSet<Branch> Branches { get; set; }
        public virtual DbSet<stringData_MasterResourceList> stringData_MasterResourceList { get; set; }
        public virtual DbSet<stringData_BuildData> stringData_BuildData { get; set; }
        public virtual DbSet<stringData_LCTImportData> stringData_LCTImportData { get; set; }
        public virtual DbSet<stringData_SourceRepoData> stringData_SourceRepoData { get; set; }
        public virtual DbSet<stringData_TargetRepoData> stringData_TargetRepoData { get; set; }
        public virtual DbSet<vw_OfficialMilestoneDates> vw_OfficialMilestoneDates { get; set; }
        public virtual DbSet<HistoryResourceFile> HistoryResourceFiles { get; set; }
        public virtual DbSet<HistoryResourceFiles_Target> HistoryResourceFiles_Target { get; set; }
        public virtual DbSet<multi_ProductPlatform_Backup> multi_ProductPlatform_Backup { get; set; }
        public virtual DbSet<ProductFamily> ProductFamilies { get; set; }
        public virtual DbSet<LocBuildProcess> LocBuildProcesses { get; set; }
        public virtual DbSet<BuildSystem> BuildSystems { get; set; }
        public virtual DbSet<CodeReview> CodeReviews { get; set; }
        public virtual DbSet<LocProcess> LocProcesses { get; set; }
        public virtual DbSet<Location> Locations { get; set; }
        public virtual DbSet<Release> Releases { get; set; }
        public virtual DbSet<vw_MilestoneTestScheduleInfo_ForOldSchedule> vw_MilestoneTestScheduleInfo_ForOldSchedule { get; set; }
        public virtual DbSet<ResourceFile> ResourceFiles { get; set; }
        public virtual DbSet<UILanguage> UILanguages { get; set; }
        public virtual DbSet<VSO_Products> VSO_Products { get; set; }
        public virtual DbSet<VSoWorkItem> VSoWorkItems { get; set; }
        public virtual DbSet<ProductPillar> ProductPillars { get; set; }
        public virtual DbSet<ProductThread> ProductThreads { get; set; }
        public virtual DbSet<Products_New> Products_New { get; set; }
        public virtual DbSet<UIVacationCategory> UIVacationCategories { get; set; }
        public virtual DbSet<VacationInfo> VacationInfoes { get; set; }
        public virtual DbSet<GitProjectDocumentation> GitProjectDocumentations { get; set; }
        public virtual DbSet<UALanguage> UALanguages { get; set; }
        public virtual DbSet<UAQuality> UAQualities { get; set; }
        public virtual DbSet<BuildRequest> BuildRequests { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual ObjectResult<GetUILanguageOfProduct_Result> GetUILanguageOfProduct(Nullable<int> productKey)
        {
            var productKeyParameter = productKey.HasValue ?
                new ObjectParameter("productKey", productKey) :
                new ObjectParameter("productKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUILanguageOfProduct_Result>("GetUILanguageOfProduct", productKeyParameter);
        }
    
        public virtual ObjectResult<GetTextInputOutputOfProduct_Result> GetTextInputOutputOfProduct(Nullable<int> featureKey)
        {
            var featureKeyParameter = featureKey.HasValue ?
                new ObjectParameter("featureKey", featureKey) :
                new ObjectParameter("featureKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTextInputOutputOfProduct_Result>("GetTextInputOutputOfProduct", featureKeyParameter);
        }
    
        public virtual ObjectResult<GetSpokenInputOutputOfProduct_Result> GetSpokenInputOutputOfProduct(Nullable<int> featureKey)
        {
            var featureKeyParameter = featureKey.HasValue ?
                new ObjectParameter("featureKey", featureKey) :
                new ObjectParameter("featureKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSpokenInputOutputOfProduct_Result>("GetSpokenInputOutputOfProduct", featureKeyParameter);
        }
    
        public virtual ObjectResult<GetUILanguageFileOfProductByPage_Result> GetUILanguageFileOfProductByPage(Nullable<int> productKey, Nullable<int> startRow, Nullable<int> endRow)
        {
            var productKeyParameter = productKey.HasValue ?
                new ObjectParameter("productKey", productKey) :
                new ObjectParameter("productKey", typeof(int));
    
            var startRowParameter = startRow.HasValue ?
                new ObjectParameter("startRow", startRow) :
                new ObjectParameter("startRow", typeof(int));
    
            var endRowParameter = endRow.HasValue ?
                new ObjectParameter("endRow", endRow) :
                new ObjectParameter("endRow", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUILanguageFileOfProductByPage_Result>("GetUILanguageFileOfProductByPage", productKeyParameter, startRowParameter, endRowParameter);
        }
    
        public virtual ObjectResult<GetUILanguageOfProductByFileKey_Result> GetUILanguageOfProductByFileKey(Nullable<int> fileKey)
        {
            var fileKeyParameter = fileKey.HasValue ?
                new ObjectParameter("fileKey", fileKey) :
                new ObjectParameter("fileKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUILanguageOfProductByFileKey_Result>("GetUILanguageOfProductByFileKey", fileKeyParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetTotalNumOfUILanguageFileOfProduct(Nullable<int> productKey)
        {
            var productKeyParameter = productKey.HasValue ?
                new ObjectParameter("productKey", productKey) :
                new ObjectParameter("productKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetTotalNumOfUILanguageFileOfProduct", productKeyParameter);
        }
    
        public virtual ObjectResult<GetFeatureOfProduct_Result> GetFeatureOfProduct(Nullable<int> productKey, Nullable<int> startRow, Nullable<int> endRow)
        {
            var productKeyParameter = productKey.HasValue ?
                new ObjectParameter("productKey", productKey) :
                new ObjectParameter("productKey", typeof(int));
    
            var startRowParameter = startRow.HasValue ?
                new ObjectParameter("startRow", startRow) :
                new ObjectParameter("startRow", typeof(int));
    
            var endRowParameter = endRow.HasValue ?
                new ObjectParameter("endRow", endRow) :
                new ObjectParameter("endRow", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFeatureOfProduct_Result>("GetFeatureOfProduct", productKeyParameter, startRowParameter, endRowParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetTotalFeatureOfProduct(Nullable<int> productKey)
        {
            var productKeyParameter = productKey.HasValue ?
                new ObjectParameter("productKey", productKey) :
                new ObjectParameter("productKey", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetTotalFeatureOfProduct", productKeyParameter);
        }
    
        public virtual ObjectResult<GetMilestoneOfRelease_Result> GetMilestoneOfRelease(Nullable<int> releaseKey, Nullable<int> startRow, Nullable<int> endRow)
        {
            var releaseKeyParameter = releaseKey.HasValue ?
                new ObjectParameter("releaseKey", releaseKey) :
                new ObjectParameter("releaseKey", typeof(int));
    
            var startRowParameter = startRow.HasValue ?
                new ObjectParameter("startRow", startRow) :
                new ObjectParameter("startRow", typeof(int));
    
            var endRowParameter = endRow.HasValue ?
                new ObjectParameter("endRow", endRow) :
                new ObjectParameter("endRow", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMilestoneOfRelease_Result>("GetMilestoneOfRelease", releaseKeyParameter, startRowParameter, endRowParameter);
        }
    
        public virtual ObjectResult<GetTestPlanOfRelease_Result> GetTestPlanOfRelease(Nullable<int> releaseKey, Nullable<int> startRow, Nullable<int> endRow)
        {
            var releaseKeyParameter = releaseKey.HasValue ?
                new ObjectParameter("releaseKey", releaseKey) :
                new ObjectParameter("releaseKey", typeof(int));
    
            var startRowParameter = startRow.HasValue ?
                new ObjectParameter("startRow", startRow) :
                new ObjectParameter("startRow", typeof(int));
    
            var endRowParameter = endRow.HasValue ?
                new ObjectParameter("endRow", endRow) :
                new ObjectParameter("endRow", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTestPlanOfRelease_Result>("GetTestPlanOfRelease", releaseKeyParameter, startRowParameter, endRowParameter);
        }
    
        public virtual ObjectResult<GetReleaseOfProduct_Result> GetReleaseOfProduct(Nullable<int> productKey, Nullable<int> startRow, Nullable<int> endRow)
        {
            var productKeyParameter = productKey.HasValue ?
                new ObjectParameter("productKey", productKey) :
                new ObjectParameter("productKey", typeof(int));
    
            var startRowParameter = startRow.HasValue ?
                new ObjectParameter("startRow", startRow) :
                new ObjectParameter("startRow", typeof(int));
    
            var endRowParameter = endRow.HasValue ?
                new ObjectParameter("endRow", endRow) :
                new ObjectParameter("endRow", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetReleaseOfProduct_Result>("GetReleaseOfProduct", productKeyParameter, startRowParameter, endRowParameter);
        }
    }
}
